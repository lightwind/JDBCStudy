package com.light.jdbc;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Scanner;

import org.junit.Test;

public class JDBCTest {

	@SuppressWarnings("deprecation")
	@Test
	public void testPreparedStatement() {
		Connection connection = null;
		PreparedStatement preparedStatement = null;

		try {
			connection = JDBCTools.getConnection();
			String sql = "insert into customers (name,email,birth) values (?,?,?)";

			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setString(1, "light");
			preparedStatement.setString(2, "dsadsads@163.com");
			preparedStatement.setDate(3, new Date(0, 1, 15));

			preparedStatement.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			JDBCTools.releaseDB(null, preparedStatement, connection);
		}
	}

	@Test
	public void testGetStudent() {
		// 得到查询的类型
		int searchType = getSearchTypeFromConsole();

		// 具体查询学生信息
		Student student = searchStudent(searchType);

		// 打印学生信息
		printStudent(student);
	}

	/**
	 * 打印学生信息的方法
	 */
	private void printStudent(Student student) {
		if (student != null) {
			System.out.println(student);
		} else {
			System.out.println("查无此人！");
		}
	}

	/**
	 * 具体查询学生信息的方法，返回一个Student对象，若不存在就返回null
	 */
	private Student searchStudent(int searchType) {

		String sql = "select * from examstudent where ";

		@SuppressWarnings("resource")
		Scanner scanner = new Scanner(System.in);
		// 1、根据输入的searchType，提示用户输入信息：
		// a、若searchType为1 ，提示：请输入身份证号，若为2，请输入准考证号
		if (searchType == 1) {
			// 2、根据searchType确定sql
			System.out.println("请输入身份证号");
			String idCard = scanner.next();
			sql = sql + "idCard = '" + idCard + "'";
		} else {
			System.out.println("请输入准考证号");
			String examCard = scanner.next();
			sql = sql + "examCard = '" + examCard + "'";
		}

		// 3、执行查询
		Student student = getStudent(sql);

		// 4、若存在，将查询结果封装成一个Student对象
		return student;
	}

	/**
	 * 根据传入的sql，返回Student对象
	 * @param sql
	 * @return
	 */
	private Student getStudent(String sql) {
		Student student = null;

		Connection connection = null;
		Statement statement = null;
		ResultSet resultSet = null;

		try {
			connection = JDBCTools.getConnection();
			statement = connection.createStatement();
			resultSet = statement.executeQuery(sql);

			while (resultSet.next()) {
				student = new Student(resultSet.getInt(1), resultSet.getInt(2),
						resultSet.getString(3), resultSet.getString(4), resultSet.getString(5),
						resultSet.getString(6), resultSet.getInt(7));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			JDBCTools.releaseDB(resultSet, statement, connection);
		}
		return student;
	}

	/**
	 * 从控制台读取一个整数，确定要查询的类型
	 * @return 1、身份证查询； 2、准考证号查询    其他的无效并提示请用户重新输入
	 */
	private int getSearchTypeFromConsole() {
		System.out.println("请输入查询类型：1、身份证查询；2、准考证查询");
		Scanner scanner = new Scanner(System.in);
		int type = scanner.nextInt();
		if (type != 1 && type != 2) {
			System.out.println("输入有误，请重新输入！");
			throw new RuntimeException();
		}
		return 0;
	}

	@Test
	public void testAddNewStudent() {
		Student student = getStudentFromConsole();
		addNewStudent(student);
	}

	private Student getStudentFromConsole() {
		Scanner scanner = new Scanner(System.in);

		Student student = new Student();

		System.out.print("FlowId:");
		student.setFlowId(scanner.nextInt());

		System.out.print("Type:");
		student.setType(scanner.nextInt());

		System.out.print("IdCard:");
		student.setIdCard(scanner.next());

		System.out.print("ExamCard:");
		student.setExamCard(scanner.next());

		System.out.print("StudentName:");
		student.setStudentName(scanner.next());

		System.out.print("Location:");
		student.setLocation(scanner.next());

		System.out.print("Grade:");
		student.setGrade(scanner.nextInt());

		return student;
	}

	public void addNewStudent2(Student student) {
		String sql = "insert into examstudent values (?,?,?,?,?,?,?)";
	}

	public void addNewStudent(Student student) {
		String sql = "insert into examstudent values (" + student.getFlowId() + ","
				+ student.getType() + ",'" + student.getIdCard() + "','" + student.getExamCard()
				+ "','" + student.getStudentName() + "','" + student.getLocation() + "',"
				+ student.getGrade() + ")";

		JDBCTools.update(sql);
	}

}
